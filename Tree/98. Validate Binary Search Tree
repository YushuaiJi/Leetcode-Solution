/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isValidBST(TreeNode root) {
        //if(root == null) return true;
        //if(!left(root.left,root.val)) return false;
        //if(!right(root.right,root.val)) return false;
        if(!isValidBST(root.left)) return false;
        if(!isValidBST(root.right)) return false;

        return true;
    }

    private boolean left(TreeNode root,int value){
      if(root == null) return true;
      if(root.val >= value) return false;
      if(!left(root.left,value)) return false;
      if(!left(root.right, value)) return false;
      return true;
    }

    private boolean right(TreeNode root, int value){
      if(root == null) return true;
      if(root.val <= value) return false;
      if(!right(root.left, value)) return false;
      if(!right(root.right, value)) return false;
      return true;
    }
}

class Solution {
    long pre = Long.MIN_VALUE;
    public boolean isValidBST(TreeNode root) {
        if(root == null) return true;
        if(!isValidBST(root.left))return false;
        if(root.val<=pre) return false;
        pre = root.val;
        if(!isValidBST(root.right))return false;
        return true;
    }
}
