class Solution {
    public void nextPermutation(int[] nums) {
    if(nums == null || nums.length <2) return;
    int l = nums.length;
    int i = l-2;
    while(i >= 0 && nums[i]>=nums[i+1]) i--;
    int j = l-1;
    if(i>=0){
        while(nums[i] >= nums[j]&& j> i){
            j--;
        }
        swap(i,j,nums);       
    }
    reverse(i+1,l-1,nums);
    }

    private void swap(int i, int j, int[] nums){
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    private void reverse(int i, int j, int[] nums){
        while(i < j) swap(i++,j--,nums);

    }
}
